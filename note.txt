包的说明
-----_02netty_base：
        netty的基础使用。包括Bytebuf的使用、netty和jdk的Future比较、netty的Promise接口、
     netty的pipeline、创建客户端、服务端的例子
-----_03netty_partialAndMerging_Packet：
        netty的粘包半包问题。解决办法：
     ①短连接：每一次发送完消息就断开。不能解决半包问题
     ②结束标志：以固定的字符作为一条消息的结束标志。需要遍历每一个字节来拆分消息
     ③固定长度：每一条消息都是固定的长度。不灵活，可能消息长度很短，但是这种方案下要选择最长的消息作为基准
     ④消息体+消息体：每一条消息分为消息头 和 消息体，消息头中指出了消息体的长度，根据这个长度去拿出指定的字节
     作为这条消息。————用的最多
        【说明】方案没有最优，只有最合适的。比如：
     ①如果某种环境下消息长度就是相等的，并且长度也比较短。此时最合适就是方法3。方法1消耗太大；方法2会浪费空间因
     为消息长度本身就很短；方法4没有必要，并且会引入额外的字段
     ②消息长度如果不固定，并且消息普遍比较长。就选用方法4，更灵活
        【使用规则】
     step1：规定一种消息的规则
     step2：客户端按照指定的规则发送消息，比如：结尾添加标记 或者 写入消息体之前写入消息体的长度
     step3：服务端在handler中添加指定的解码器(比如：LengthFieldBasedFrameDecoder，见TestLengthFieldBasedFrameDecoder)，
        添加在第一个位置
1. 学习NIO相关知识
2. 学习netty的使用
3. 备份github